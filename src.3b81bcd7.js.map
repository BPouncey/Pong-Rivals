{"version":3,"sources":["src/settings.js","src/partials/board.js","src/partials/Paddle.js","src/partials/ball.js","src/partials/score.js","src/partials/Game.js","src/index.js"],"names":["SVG_NS","KEYS","a","z","k","m","r","n","x","spaceBar","Board","width","height","svg","rect","document","createElementNS","setAttributeNS","appendChild","line","lineWhite","line2","lineWhite2","Paddle","boardHeight","y","up","down","color","speed","lives","movingUp","movingDown","attacking","attackDistance","addEventListener","event","key","attack","drawPaddle","Math","max","min","paddleRect","Ball","boardWidth","type","soundEffect","getElementById","loop","direction","currentDirection","restarting","giveDamage","reset","hitLeft","hitRight","hitTop","hitBottom","vx","vy","paddle","paddle2","coordinates","leftX","rightX","topY","bottomY","playSound","floor","random","abs","round","player","mover","wallCollision","paddleCollision","drawBall","rightGoal","leftGoal","goal","circle","play","Score","size","score","text","textContent","Game","element","gameMessage","restartMessage","form","gameElement","audio","startOfGame","gameOn","board","paddleWidth","paddleHeight","boardGap","startingPosition","ball","score1","score2","innerText","playerOneData","value","playerTwoData","gameOver","restartGame","num","style","display","textShadow","ballSchedular","innerHTML","render","game","gameLoop","requestAnimationFrame"],"mappings":"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","file":"src.3b81bcd7.js","sourceRoot":"..","sourcesContent":["export const SVG_NS = \"http://www.w3.org/2000/svg\";\n\nexport const KEYS = {\n    a: 'a',\n    z: 'z',\n    k: 'k',\n    m: 'm',\n    r: 'r',\n    n: 'n',\n    x: 'x',\n    spaceBar:' '\n}","import { SVG_NS } from \"../settings\";\n\nexport default class Board {\n    constructor(width, height){\n        this.width = width;\n        this.height = height;\n    }\n    render(svg){\n\n        let rect = document.createElementNS(SVG_NS, \"rect\");\n\n        rect.setAttributeNS(null, \"x\", 0);\n        rect.setAttributeNS(null, \"y\", 0);\n        rect.setAttributeNS(null, 'width', this.width);\n        rect.setAttributeNS(null, 'height', this.height);\n        rect.setAttributeNS(null, \"stroke\", \"#DD809D\");\n        rect.setAttributeNS(null, \"fill\", \"#2A1140\");\n        rect.setAttributeNS(null, \"stroke-width\", \"7\");\n        rect.setAttributeNS(null, \"opacity\", 0.7);\n\n        svg.appendChild(rect);\n\n        let line = document.createElementNS(SVG_NS, 'line');\n\n        line.setAttributeNS(null, \"x1\", 250);\n        line.setAttributeNS(null, \"y1\", 0);\n        line.setAttributeNS(null, \"x2\", 250);\n        line.setAttributeNS(null, \"y2\", 250);\n        line.setAttributeNS(null, \"stroke\", \"black\");\n        line.setAttributeNS(null, \"stroke-width\", 7);\n        line.setAttributeNS(null, \"stroke-dasharray\", 6);\n\n        svg.appendChild(line);\n\n        let lineWhite = document.createElementNS(SVG_NS, 'line');\n        lineWhite.setAttributeNS(null, \"x1\", 250);\n        lineWhite.setAttributeNS(null, \"y1\", 5);\n        lineWhite.setAttributeNS(null, \"x2\", 250);\n        lineWhite.setAttributeNS(null, \"y2\", 250);\n        lineWhite.setAttributeNS(null, \"stroke\", \"#ff1493\");\n        lineWhite.setAttributeNS(null, \"stroke-width\", 7);\n        lineWhite.setAttributeNS(null, \"stroke-dasharray\", 6);\n\n        svg.appendChild(lineWhite);\n\n        let line2 = document.createElementNS(SVG_NS, 'line');\n\n        line2.setAttributeNS(null, \"x1\", 260);\n        line2.setAttributeNS(null, \"y1\", 5);\n        line2.setAttributeNS(null, \"x2\", 260);\n        line2.setAttributeNS(null, \"y2\", 260);\n        line2.setAttributeNS(null, \"stroke\", \"black\");\n        line2.setAttributeNS(null, \"stroke-width\", 7);\n        line2.setAttributeNS(null, \"stroke-dasharray\", 6);\n\n        svg.appendChild(line2);\n\n        let lineWhite2 = document.createElementNS(SVG_NS, 'line');\n        lineWhite2.setAttributeNS(null, \"x1\", 260);\n        lineWhite2.setAttributeNS(null, \"y1\", 10);\n        lineWhite2.setAttributeNS(null, \"x2\", 260);\n        lineWhite2.setAttributeNS(null, \"y2\", 260);\n        lineWhite2.setAttributeNS(null, \"stroke\", \"#1ff4ef\");\n        lineWhite2.setAttributeNS(null, \"stroke-width\", 7);\n        lineWhite2.setAttributeNS(null, \"stroke-dasharray\", 6);\n\n        svg.appendChild(lineWhite2);\n    }\n}","import {SVG_NS} from '../settings'\n\nexport default class Paddle{\n    constructor(boardHeight, width, height, x, y, up, down, color){\n        this.boardHeight = boardHeight;\n        this.width = width;\n        this.height = height;\n        this.x = x;\n        this.y = y;\n        this.speed = 10;\n        this.lives = 7;\n        this.color = color;\n        this.movingUp = false;\n        this.movingDown = false;\n        this.attacking = false;\n        this.attackDistance = 20;\n        \n        document.addEventListener(\"keydown\", event => {\n            switch (event.key) {\n                case up:\n                    this.movingUp = true;\n                    break;\n                case down:\n                    this.movingDown = true;\n                    break;\n                case attack:\n                    this.attacking = true;\n            }\n        });\n\n        document.addEventListener(\"keyup\", event => {\n            switch (event.key) {\n                case up:\n                    this.movingUp = false;\n                    break;\n                case down:\n                    this.movingDown = false;\n                    break;\n            }\n        });\n    }\n\n    render(svg){\n        this.drawPaddle(svg);\n\n        if(this.movingUp){\n            this.y = Math.max(0, this.y - this.speed);\n        }\n        if(this.movingDown){\n            this.y = Math.min(this.boardHeight - this.height, this.y + this.speed);\n        }\n    }\n\n    drawPaddle(svg) {\n        let paddleRect = document.createElementNS(SVG_NS, \"rect\");\n        paddleRect.setAttributeNS(null, \"x\", this.x);\n        paddleRect.setAttributeNS(null, \"y\", this.y);\n        paddleRect.setAttributeNS(null, 'width', this.width);\n        paddleRect.setAttributeNS(null, 'height', this.height);\n        paddleRect.setAttributeNS(null, \"stroke\", \"black\");\n        paddleRect.setAttributeNS(null, \"fill\", `${this.color}`);\n        paddleRect.setAttributeNS(null, \"stroke-width\", \"2\");\n        svg.appendChild(paddleRect);\n    }\n\n    coordinates(x, y, width, height){\n        let leftX = x;\n        let rightX = x + width;\n        let topY = y;\n        let bottomY = y + height;\n        return[leftX, rightX, topY, bottomY]\n    }\n\n}   \n","import { SVG_NS } from '../settings'\n\nexport default class Ball{\n    constructor(boardWidth, boardHeight, r, color, speed, type){\n        this.soundEffect = document.getElementById(\"soundEffect\");\n        this.soundEffect.loop = false;\n        this.boardWidth = boardWidth;\n        this.boardHeight = boardHeight;\n        this.r = r;\n        this.direction = 1;\n        this.currentDirection = 0;\n        this.speed = speed\n        this.color = color;\n        this.type = type;\n        this.restarting = false;\n        this.giveDamage =false;\n        this.reset();\n    }\n\n    wallCollision(){\n        const hitLeft = this.x - this.r <= 0;\n        const hitRight = this.x + this.r >= this.boardWidth;\n        const hitTop = this.y - this.r <= 0;\n        const hitBottom = this.y + this.r >= this.boardHeight;\n\n        if(hitRight || hitLeft){\n            this.vx = -this.vx;\n            this.speed += 0.1; \n\n        }else if (hitTop || hitBottom){\n            this.vy = -this.vy; \n            this.speed += 0.1;\n        }\n    }\n\n    paddleCollision(paddle, paddle2){\n        if(this.vx > 0){\n            let paddle = paddle2.coordinates(paddle2.x, paddle2.y, paddle2.width, paddle2.height)\n            let [leftX, rightX, topY, bottomY] = paddle;\n            if(\n                (this.x + this.r >= leftX)\n                && (this.x + this.r <= rightX)\n                && (this.y >= topY && this.y <= bottomY)\n            ){\n                if(this.type === \"danger\"){\n                    this.giveDamage = true;\n            }\n                this.currentDirection = -1;\n                this.vx = -this.vx;\n                this.playSound()\n            }\n\n        }else{\n            let paddle2 = paddle.coordinates(paddle.x, paddle.y, paddle.width, paddle.height)\n            let [leftX, rightX, topY, bottomY] = paddle2;\n\n            if(\n                (this.x - this.r <= rightX)\n                && (this.x - this.r >= leftX)\n                &&(this.y >= topY && this.y <= bottomY)\n            ){\n                if(this.type === 'danger'){\n                    this.giveDamage = true;\n            }\n                this.currentDirection = 1;\n                this.vx = -this.vx;\n                this.playSound()\n   \n            }\n        }\n    }\n\n    reset(){\n        this.restarting = true;\n        this.x = this.boardWidth / 2;\n        this.y = this.boardHeight / 2;\n        this.vy = 0;\n\n        while(this.vy === 0){\n            this.vy = Math.floor(Math.random() * 10 - 5);\n        }\n        this.vx = this.direction * (6- Math.abs(this.vy));\n        this.vx *= Math.round(Math.random())* 2-1;\n    }\n\n    goal(player, type){\n        if(type === \"regular\"){\n            player.lives--;\n            this.reset();\n\n        }else if(type === \"danger\"){\n            this.reset();\n\n        }else if (type === \"life\"){\n            player.lives ++;\n            this.reset();\n        }\n    }\n\n    render(svg, paddle, paddle2){\n\n        this.mover();\n        this.wallCollision();\n        this.paddleCollision(paddle, paddle2);\n        this.drawBall(svg);\n\n        const rightGoal = this.x + this.r >= this.boardWidth;\n        const leftGoal = this.x - this.r <= 0;\n\n        if(rightGoal && this.type === \"regular\"){\n            this.goal(paddle, \"regular\");\n            this.direction = 1;\n        }\n        else if(leftGoal && this.type === \"regular\"){\n            this.goal(paddle2, \"regular\");\n            this.direction = -1;\n        }\n        else if(rightGoal && this.type === \"danger\"){\n            this.goal(paddle, \"danger\")\n            this.direction = 1;\n\n        }else if(leftGoal && this.type === \"danger\"){\n            this.goal(paddle2, \"danger\")\n            this.direction = -1;\n        }\n        else if (rightGoal && this.type === \"life\"){\n            this.goal(paddle2, \"life\")\n            this.direction = 1;\n\n        }else if (leftGoal && this.type === \"life\"){\n            this.goal(paddle, \"life\")\n            this.direction = -1;\n        }\n    }\n\n    drawBall(svg) {\n        let circle = document.createElementNS(SVG_NS, \"circle\");\n        circle.setAttributeNS(null, \"cx\", this.x);\n        circle.setAttributeNS(null, \"cy\", this.y);\n        circle.setAttributeNS(null, \"r\", this.r);\n        circle.setAttributeNS(null, \"stroke\", \"black\");\n        circle.setAttributeNS(null, \"fill\", `${this.color}`);\n        svg.appendChild(circle);\n    }\n\n    mover() {\n        this.x += this.vx * this.speed;\n        this.y += this.vy * this.speed;\n    }\n\n    playSound(){\n        this.soundEffect.play();\n    }\n}","import {SVG_NS} from '../settings'\n\nexport default class Score{\n    constructor(x, y, size){\n        this.x = x;\n        this.y = y;\n        this.size = size;\n    }\n\n    render(svg, score){\n        let text = document.createElementNS(SVG_NS, 'text');\n        text.setAttributeNS(null, 'x', this.x);\n        text.setAttributeNS(null, 'y', this.y);\n        text.setAttributeNS(null, 'font-family', \"Silkscreen Web\");\n        text.setAttributeNS(null, 'font-size', this.size);\n        text.setAttributeNS(null, 'fill', 'white');\n        text.textContent = score;\n        svg.appendChild(text);\n    }\n}","import {SVG_NS, KEYS} from \"../settings\";\nimport Board from './board';\nimport Paddle from './Paddle';\nimport Ball from './ball';\nimport Score from './score';\n\n\nexport default class Game {\n  constructor(element, width, height, gameMessage, restartMessage, form){\n    this.element = element;\n    this.width = width;\n    this.height = height;\n    this.gameElement = document.getElementById(this.element);\n    this.gameMessage = gameMessage;\n    this.restartMessage = restartMessage;\n    this.audio = document.getElementById(\"music\");\n    this.form = form;\n    this.startOfGame = true;\n    this.audio.play();\n    this.gameOn = false;\n    this.board = new Board(this.width, this.height);\n\n    this.paddleWidth = 8;\n    this.paddleHeight = 56;\n    this.boardGap = 10;\n    this.startingPosition = this.height / 2 - this.paddleHeight / 2;\n\n    this.paddle = new Paddle(\n      this.height, this.paddleWidth, this.paddleHeight, this.boardGap, this.startingPosition,\n      KEYS.a, KEYS.z, \"#ff1493\",\n      KEYS.x\n      );\n\n    this.paddle2 = new Paddle(\n      this.height, this.paddleWidth, this.paddleHeight, this.width - this.boardGap - this.paddleWidth,\n      this.startingPosition,\n      KEYS.k, KEYS.m, \"#1ff4ef\",\n      KEYS.n);\n\n    this.ball = new Ball(this.width, this.height, 5, 'white', 1);\n\n    this.score1 = new Score(this.width / 2 -50, 30, 30);\n    this.score2 = new Score(this.width / 2 +50, 30, 30);\n\n    document.addEventListener('keydown', event =>{\n      switch(event.key){\n        case KEYS.spaceBar:\n          this.gameMessage.innerText = \"\";\n          this.restartMessage.innerText = \"\";\n          this.gameOn = !this.gameOn;\n          this.paddle2.speed = 10;\n          this.paddle.speed = 10;\n          break;\n      }\n\n      if(this.startOfGame && event.key === KEYS.spaceBar){\n        this.playerOneData = document.getElementById(\"playerOneInput\").value\n        this.playerTwoData = document.getElementById(\"playerTwoInput\").value\n        this.startOfGame = false;\n      }\n\n      if(this.gameOver && event.key === KEYS.spaceBar){\n        this.gameOver = false;\n        this.restartGame();\n      }\n\n      if(!this.gameOn && event.key === KEYS.spaceBar){\n        this.gameMessage.innerText = \"PAUSED\";\n      }else if(this.gameOn && event.key === KEYS.spaceBar){\n        this.gameMessage.innerText = \"...\";\n      }\n    })\n  }\n\n  restartGame(){\n    this.gameOver = false;\n    this.gameOn = true;\n    this.ball.reset();\n    this.gameMessage.innerText = \"\";\n    this.paddle2.lives = 7;\n    this.paddle.lives = 7;\n  }\n\n  ballSchedular() {\n    const num = Math.floor(Math.random() * 4);\n    if (num === 3){\n      this.ball = new Ball(this.width, this.height, 5, 'red', 1.3, 'danger');\n    }else if(num === 0){\n      this.ball = new Ball(this.width, this.height, 5, 'cyan', 1.2, 'life');\n    }else{\n      this.ball = new Ball(this.width, this.height, 5, 'white', 1, 'regular');\n    }\n  }\n\n  render() {\n\n    if(this.gameOn){\n      this.form.style.display = \"none\";\n    }\n\n    if (!this.gameOn){\n      this.paddle.speed = 0;\n      this.paddle2.speed = 0;\n      return;\n    }\n\n    if(this.paddle.lives < 0){\n      this.gameOver = true;\n      this.gameMessage.style.color = \"#ff1493\";\n      this.gameMessage.style.textShadow = \"2px 2px #1ff4ef\";\n      this.gameMessage.innerText = `${this.playerTwoData} wins!`;\n      this.restartMessage.style.color = \"#1ff4ef\";\n      this.restartMessage.innerText = \"Restart (space)\";\n       this.restartMessage.style.textShadow = \"2px 2px #ff1493\"\n      return;\n    }\n\n    if(this.paddle2.lives < 0){\n      this.gameOver = true;\n      this.gameMessage.style.color = \"#1ff4ef\";\n      this.gameMessage.style.textShadow = \"2px 2px #ff1493\"\n      this.gameMessage.innerText = `${this.playerOneData} wins!`;\n      this.restartMessage.style.color = \"#ff1493\";\n      this.restartMessage.innerText = \"Restart (space)\";\n      this.restartMessage.style.textShadow = \"2px 2px #1ff4ef\"\n      return;\n    }\n\n    if(this.ball.restarting){\n      this.ballSchedular();\n      this.ball.restarting = false;\n    }\n\n    if(this.ball.giveDamage && this.ball.currentDirection === -1){\n      this.paddle.lives -= 1;\n      this.ball.giveDamage = false;\n    }else if(this.ball.giveDamage && this.ball.currentDirection === 1){\n      this.paddle2.lives -= 1;\n      this.ball.giveDamage = false;\n    }\n\n    let svg = document.createElementNS(SVG_NS, \"svg\");\n\n    this.gameElement.innerHTML = \"\";\n\n    svg.setAttributeNS(null, 'width', this.width);\n    svg.setAttributeNS(null, 'height', this.height);\n    svg.setAttributeNS(null, 'viewBox', `0 0 ${this.width} ${this.height}`);\n\n    this.gameElement.appendChild(svg);\n\n    this.board.render(svg);\n\n    this.paddle.render(svg);\n    this.paddle2.render(svg);\n\n    this.ball.render(svg, this.paddle, this.paddle2);\n\n    this.score1.render(svg, this.paddle2.lives);\n    this.score2.render(svg, this.paddle.lives);\n\n  }\n  \n}\n","import './styles/game.css';\nimport Game from './partials/Game';\n\nconst gameMessage = document.getElementById(\"gameMessage\");\nconst restartMessage = document.getElementById(\"restartMessage\");\nconst form = document.getElementById(\"playerForm\");\n\nconst game = new Game('game', 512, 256, gameMessage, restartMessage, form);\n\n(function gameLoop() {\n  game.render();\n  requestAnimationFrame(gameLoop);\n})();\n"]}